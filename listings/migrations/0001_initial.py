# Generated by Django 5.2.5 on 2025-08-21 09:50

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ListingUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255)),
                ('phone', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='RealEstate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, verbose_name='Название')),
                ('type', models.CharField(choices=[('uchastok', 'Участок'), ('novostroyka', 'Новостройка'), ('vtorichka', 'Вторичка'), ('kommersiya', 'Коммерческое помещение'), ('arenda', 'Аренда')], max_length=20, verbose_name='Тип недвижимости')),
                ('district', models.CharField(blank=True, choices=[('bekt', 'Бектемирский район'), ('chil', 'Чиланзарский район'), ('yash', 'Яшнободский район'), ('mirab', 'Мирабадский район'), ('mu', 'Мирзо-Улугбекский район'), ('serg', 'Сергелийский район'), ('shayx', 'Шайхантахурский район'), ('almaz', 'Алмазарский район'), ('uch', 'Учтепинский район'), ('yakka', 'Яккасарайский район'), ('yunus', 'Юнусабадский район')], max_length=30, null=True, verbose_name='Район')),
                ('status', models.CharField(choices=[('active', 'Срочно'), ('sold', 'Продано')], default='active', max_length=20, verbose_name='Статус')),
                ('address', models.CharField(max_length=255, verbose_name='Адрес')),
                ('orientir', models.CharField(blank=True, max_length=255, verbose_name='Ориентир')),
                ('rooms', models.PositiveIntegerField(blank=True, null=True, verbose_name='Количество комнат')),
                ('floor', models.PositiveIntegerField(blank=True, null=True, verbose_name='Этаж')),
                ('total_floors', models.PositiveIntegerField(blank=True, null=True, verbose_name='Этажность')),
                ('area', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Общая площадь (м²)')),
                ('condition', models.CharField(blank=True, choices=[('evroremont', 'Евроремонт'), ('chistyy', 'Чистый ремонт'), ('bez_remonta', 'Без ремонта'), ('trebuet', 'Требует ремонт')], max_length=20, verbose_name='Состояние')),
                ('has_balcony', models.BooleanField(default=False, verbose_name='Есть балкон')),
                ('balcony_size', models.CharField(blank=True, max_length=50, verbose_name='Размер балкона')),
                ('has_terrace', models.BooleanField(default=False, verbose_name='Есть терраса')),
                ('cadastral', models.BooleanField(default=False, verbose_name='Есть кадастр')),
                ('furniture', models.BooleanField(default=False, verbose_name='С мебелью')),
                ('appliances', models.BooleanField(default=False, verbose_name='С техникой')),
                ('price_usd', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Цена в USD')),
                ('mortgage_available', models.BooleanField(default=True, verbose_name='Ипотека доступна')),
                ('description', models.TextField(blank=True, verbose_name='Дополнительная информация')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Телефон')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата добавления')),
                ('is_approved', models.BooleanField(default=False, verbose_name='Одобрено администратором')),
                ('is_favorite', models.BooleanField(default=False, verbose_name='В избранном')),
                ('likes', models.IntegerField(blank=True, default=0, null=True, verbose_name='Количество лайков')),
                ('views', models.PositiveIntegerField(blank=True, default=0)),
                ('video', models.FileField(blank=True, null=True, upload_to='videos/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['mp4', 'mov', 'avi'])])),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='real_estates', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RealEstateImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='realestate/images/')),
                ('real_estate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='listings.realestate')),
            ],
        ),
        migrations.CreateModel(
            name='RealEstateVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video', models.FileField(upload_to='realestate/videos/')),
                ('real_estate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.realestate')),
            ],
        ),
    ]
